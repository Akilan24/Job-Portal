spackage com.jobservice.model;

import java.util.List;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Applicant {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long applicantId;
	@Pattern(regexp = "^(?=.*\\d)[a-zA-Z0-9]{6}$", message = "Username should be alphanumeric and 6 characters long")
	private String username;

	@Pattern(regexp = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=!])(?=\\S+$).{8,}$", message = "Password must contain at least one digit, one lowercase and uppercase letter, one special character, and be at least 8 characters long")
	private String password;

	@Pattern(regexp = "^(applicant|recruiter|admin)$", message = "Please provide a valid role")
	private String role;
	@NotBlank(message = "Please provide the first name")
	private String firstName;
	@NotBlank(message = "Please provide the last name")
	private String lastName;
	@Email(message = "Please provide a valid email address")
	private String emailId;
	@NotBlank(message = "Please provide the city")
	private String city;
	@NotBlank(message = "Please provide the state")
	private String state;
	@NotBlank(message = "Please provide the country")
	private String country;
	@NotBlank(message = "Please provide the pincode")
	private String pincode;
	private Set<String> Skills;

	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "applicantId", referencedColumnName = "applicantId")
	private List<WorkExperience> experience;

	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "applicantId", referencedColumnName = "applicantId")
	private List<Education> education;

}
