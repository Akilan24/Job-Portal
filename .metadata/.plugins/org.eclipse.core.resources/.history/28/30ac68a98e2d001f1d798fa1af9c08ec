package com.userservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.userservice.exception.ApplicantNotFoundException;
import com.userservice.model.Applicant;
import com.userservice.service.ApplicantService;

@RestController
@RequestMapping("/user/applicants")
public class ApplicantController {

    @Autowired
    private ApplicantService applicantService;

    @PostMapping("/add")
    public ResponseEntity<Applicant> addApplicant(@RequestBody Applicant applicant) {
        Applicant addedApplicant = applicantService.addApplicant(applicant);
        return new ResponseEntity<>(addedApplicant, HttpStatus.CREATED);
    }

    @GetMapping("/getall")
    public ResponseEntity<List<Applicant>> getAllApplicants() throws ApplicantNotFoundException {
        List<Applicant> allApplicants = applicantService.getAllApplicants();
        return new ResponseEntity<>(allApplicants, HttpStatus.OK);
    }

    @GetMapping("/get/{id}")
    public ResponseEntity<Applicant> getApplicantById(@PathVariable long id) throws ApplicantNotFoundException {
        Applicant applicant = applicantService.getApplicantById(id);
        return new ResponseEntity<>(applicant, HttpStatus.OK);
    }

    @PutMapping("/update")
    public ResponseEntity<Applicant> updateApplicant(@RequestBody Applicant applicant) throws ApplicantNotFoundException{
        Applicant updatedApplicant = applicantService.updateApplicant(applicant);
        return new ResponseEntity<>(updatedApplicant, HttpStatus.OK);
    }

    @DeleteMapping("/delete/{id}")
    public ResponseEntity<String> deleteApplicant(@PathVariable long id) throws ApplicantNotFoundException {
        applicantService.deleteApplicant(id);
        return new ResponseEntity<>("Applicant deleted successfully", HttpStatus.OK);
    }
}
