package com.authservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.authservice.entity.User;
import com.authservice.exception.UserNotFoundException;
import com.authservice.proxyentity.user.UserProxyController;

@RestController
@RequestMapping("/CS/User")
@CrossOrigin("http://localhost:5173")
public class UserController {
	@Autowired
	UserProxyController userProxy;

	@PreAuthorize("hasAuthority('admin')")
    @GetMapping("/getall")
    public ResponseEntity<List<User>> getAllUsers() throws UserNotFoundException {
    	  return userProxy.getAllUsers();
    }

	@PreAuthorize("hasAnyAuthority('admin','user')")
    @GetMapping("/get/{id}")
    public ResponseEntity<User> getUserById(@PathVariable long id) throws UserNotFoundException {
    	  return userProxy.getUserById(id);
    }

	@PreAuthorize("hasAuthority('user')")
    @PutMapping("/update")
    public ResponseEntity<User> updateUser(@RequestBody User user) throws UserNotFoundException {
    	  return userProxy.updateUser(user);
    }

	@PreAuthorize("hasAuthority('user')")
    @DeleteMapping("/delete/{id}")
    public ResponseEntity<String> deleteUser(@PathVariable long id) throws UserNotFoundException {
    	  return userProxy.deleteUser(id);
    }
}
