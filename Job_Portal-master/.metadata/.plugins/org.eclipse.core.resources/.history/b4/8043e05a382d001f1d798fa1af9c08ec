package com.jobservice.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jobservice.exception.JobApplicationNotFoundException;
import com.jobservice.model.JobApplication;
import com.jobservice.Repository.JobApplicationRepository;

@Service
public class JobApplicationServiceImpl implements JobApplicationService {

	@Autowired
	private JobApplicationRepository applicationRepo;

	@Override
	public JobApplication addJobApplication(JobApplication jobApplication) {
		return applicationRepo.save(jobApplication);
	}

	@Override
	public List<JobApplication> getAllJobApplications() throws JobApplicationNotFoundException {
		List<JobApplication> findAll = applicationRepo.findAll();
		if (findAll.isEmpty()) {
			throw new JobApplicationNotFoundException("Job applications not found");
		}
		return findAll;
	}

	@Override
	public Optional<JobApplication> getJobApplicationById(long applicationId) throws JobApplicationNotFoundException {
		Optional<JobApplication> jobApplication = applicationRepo.findById(applicationId);
		if (!jobApplication.isPresent()) {
			throw new JobApplicationNotFoundException("Job application not found with the id :" + applicationId);
		}
		return jobApplication;
	}

	@Override
	public JobApplication updateJobApplication(JobApplication jobApplication) throws JobApplicationNotFoundException {
		Optional<JobApplication> existingJobApplication = applicationRepo.findById(jobApplication.getApplicationId());
		if (existingJobApplication.isPresent()) {
			return applicationRepo.save(jobApplication);
		} else {
			throw new JobApplicationNotFoundException(
					"Job application not found with the id :" + jobApplication.getApplicationId());
		}
	}

	@Override
	public String deleteJobApplication(long applicationId) throws JobApplicationNotFoundException {
		if (applicationRepo.existsById(applicationId)) {
			applicationRepo.deleteById(applicationId);
			return "Job application deleted with id :" + applicationId;
		}
		throw new JobApplicationNotFoundException("Job application not found with the id :" + applicationId);
	}

}
