package com.jobservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jobservice.exception.JobNotFoundException;
import com.jobservice.model.Job;
import com.jobservice.service.JobService;

@RestController
@RequestMapping("/job")
public class JobController {

	@Autowired
	private JobService jobService;

	@PostMapping("/add")
	public ResponseEntity<Job> addJob(@RequestBody Job job) {
		Job addedJob = jobService.addJob(job);
		return new ResponseEntity<>(addedJob, HttpStatus.CREATED);
	}

	@GetMapping("/getall")
	public ResponseEntity<List<Job>> getAllJobs() throws JobNotFoundException {
		List<Job> allJobs = jobService.getAllJob();
		return new ResponseEntity<>(allJobs, HttpStatus.OK);
	}

	@GetMapping("/getbycategory/{category}")
	public ResponseEntity<List<Job>> getJobsByCategory(@PathVariable String category) throws JobNotFoundException {
		List<Job> jobsByCategory = jobService.getByJobCategory(category);
		return new ResponseEntity<>(jobsByCategory, HttpStatus.OK);
	}

	@GetMapping("/getbytype/{type}")
	public ResponseEntity<List<Job>> getJobsByType(@PathVariable String type) throws JobNotFoundException {
		List<Job> jobsByType = jobService.getByJobType(type);
		return new ResponseEntity<>(jobsByType, HttpStatus.OK);
	}

	@GetMapping("/getbysalary/{salary}")
	public ResponseEntity<List<Job>> getJobsBySalary(@PathVariable double salary) throws JobNotFoundException {
		List<Job> jobsBySalary = jobService.getBySalary(salary);
		return new ResponseEntity<>(jobsBySalary, HttpStatus.OK);
	}

	@PutMapping("/update")
    public ResponseEntity<Job> updateJob(@RequestBody Job job) throws JobNotFoundException {
        Job updatedJob = jobService.updateJob(job);
        return new ResponseEntity<>(updatedJob, HttpStatus.OK);
    }

	@DeleteMapping("/delete/{jobId}")
	public ResponseEntity<String> deleteJob(@PathVariable long jobId) throws JobNotFoundException {
		String result = jobService.deleteJob(jobId);
		return new ResponseEntity<>(result, HttpStatus.OK);
	}
}
