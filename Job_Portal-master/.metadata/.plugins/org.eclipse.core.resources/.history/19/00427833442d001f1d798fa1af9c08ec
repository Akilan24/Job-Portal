package com.jobservice.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jobservice.exception.JobApplicationNotFoundException;
import com.jobservice.model.JobApplication;
import com.jobservice.repository.JobApplicationRepository;

@Service
public class JobApplicationServiceImpl implements JobApplicationService {

    @Autowired
    private JobApplicationRepository repo;

    @Override
    public JobApplication addJobApplication(JobApplication jobApplication) {
        return repo.save(jobApplication);
    }

    @Override
    public List<JobApplication> getAllJobApplications() throws JobApplicationNotFoundException {
        List<JobApplication> findAll = repo.findAll();
        if (findAll.isEmpty()) {
            throw new JobApplicationNotFoundException("Job applications not found");
        }
        return findAll;
    }

    @Override
    public Optional<JobApplication> getJobApplicationById(long applicationId) throws JobApplicationNotFoundException {
        Optional<JobApplication> jobApplication = repo.findById(applicationId);
        if (!jobApplication.isPresent()) {
            throw new JobApplicationNotFoundException("Job application not found with the id :" + applicationId);
        }
        return jobApplication;
    }

    @Override
    public JobApplication updateJobApplication(JobApplication jobApplication) throws JobApplicationNotFoundException {
        Optional<JobApplication> existingJobApplication = repo.findById(jobApplication.getApplicationId());
        if (existingJobApplication.isPresent()) {
            return repo.save(jobApplication);
        } else {
            throw new JobApplicationNotFoundException("Job application not found with the id :" + jobApplication.getApplicationId());
        }
    }

    @Override
    public String deleteJobApplication(long applicationId) throws JobApplicationNotFoundException {
        if (repo.existsById(applicationId)) {
            repo.deleteById(applicationId);
            return "Job application deleted with id :" + applicationId;
        }
        throw new JobApplicationNotFoundException("Job application not found with the id :" + applicationId);
    }

//    @Override
//    public List<JobApplication> getJobApplicationsByJobId(long jobId) throws JobApplicationNotFoundException {
//        List<JobApplication> applications = repo.findByJobId(jobId);
//        if (applications.isEmpty()) {
//            throw new JobApplicationNotFoundException("Job applications not found for job ID: " + jobId);
//        }
//        return applications;
//    }
//
//    @Override
//    public List<JobApplication> getJobApplicationsByUserId(int userId) throws JobApplicationNotFoundException {
//        List<JobApplication> applications = repo.findByUserId(userId);
//        if (applications.isEmpty()) {
//            throw new JobApplicationNotFoundException("Job applications not found for user ID: " + userId);
//        }
//        return applications;
//    }
}
