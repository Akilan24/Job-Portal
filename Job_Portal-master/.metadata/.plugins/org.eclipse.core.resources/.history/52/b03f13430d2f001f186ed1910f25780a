package com.authservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.authservice.exception.RecruiterNotFoundException;
import com.authservice.proxyentity.user.Recruiter;
import com.authservice.proxyentity.user.RecruiterConstants;
import com.authservice.proxyentity.user.RecruiterProxyController;

@RestController
@RequestMapping("/JP/Recruiter")
@CrossOrigin("http://localhost:5173")
public class RecruiterController {

	@Autowired
	private UserProxyController recruiterProxy;

	@PostMapping(RecruiterConstants.ADD)
	public ResponseEntity<Recruiter> addRecruiter(@RequestBody Recruiter recruiter) {
		return recruiterProxy.addRecruiter(recruiter);
	}

	@GetMapping(RecruiterConstants.GET_ALL)
	public ResponseEntity<List<Recruiter>> getAllRecruiters() throws RecruiterNotFoundException {
		return recruiterProxy.getAllRecruiters();
	}

	@GetMapping(RecruiterConstants.GET_BY_ID)
	public ResponseEntity<Recruiter> getRecruiterById(@PathVariable long id) throws RecruiterNotFoundException {
		return recruiterProxy.getRecruiterById(id);
	}

	@PutMapping(RecruiterConstants.UPDATE)
	public ResponseEntity<Recruiter> updateRecruiter(@RequestBody Recruiter recruiter)
			throws RecruiterNotFoundException {
		return recruiterProxy.updateRecruiter(recruiter);
	}

	@DeleteMapping(RecruiterConstants.DELETE)
	public ResponseEntity<String> deleteRecruiter(@PathVariable long id) throws RecruiterNotFoundException {
		return recruiterProxy.deleteRecruiter(id);
	}
}
